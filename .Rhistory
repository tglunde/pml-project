est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~.-1,InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count~.,InsectSprays)
fit2 <- lm(count~spray2,InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year,hunger)
summary(fit)$coef
lmF <- lm(Numeric~Year,hunger[hunger$Sex=="Female"])
lmF <- lm(Numeric~Year,hunger[hunger$Sex=="Female"],hunger)
lmF <- lm(Numeric~Year,hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric~Year,data=hunger[Sex=="Femail",])
lmF <- lm(Numeric~Year,data=hunger[hunger$Sex=="Female",])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(Number~Year+Sex,hunger)
lmBoth <- lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+Sex+Sex*Year)
lmInter <- lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
info()
nxt()
bye()
require(sqirl)
require(swirl)
swirl()
fit<-(y~x,out2)
fit<-lm(y~x,out2)
plot(fit,which=1)
fitno<-lm(y~x,out2[-1,])
plot(fitno,which=1)
coef(fit)-coef(fitno)
head(dfbeat(fit))
head(dfbeta(fit))
resno <- out2[1,"y"]-predict(fitno,out2[1,])
1-resid(fit)[1]/resno
head(headvalues(fit))
head(hatvalues(fit))
sigma <- 1
sigma <- sqrt(deviance(fit)/df.residual(fit))
?df
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit,which=3)
plot(fit,which=2)
sigma <- sqrt(deviance(fitno)/df.residual(fitno))
sigma <- sqrt(deviance(fit)/df.residual(fit))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1*sqrt(1-hatvalues(fit)[1])/resid(fit)[1]
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno,out2) - predict(fit,out2)
sum(dy^2)/(2*sigma^2)
plot(fit,which=5)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destFile="ravensData.rda",method="curl")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda", destfile="ravensData.rda",method="curl")
load("ravensData.rda")
head(ravensData)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda", destfile="gaData.rda",method="curl")
load(gaData.rda)
load('gaData.rda')
gaData$julian <- julian(gaData$julian)
head(gaData)
gaData$julian <- julian(gaData$date)
head(gaData)
require(swirl)
swirl()
rpg1()
source('~/vifSims.R')
rpg1()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data=swiss)
vif(mdl)
mdl2 <- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality, data=swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility~Agriculture, data=swiss)
fit3 <- lm(Fertility~Agriculture + Examination + Education)
fit3 <- lm(Fertility~Agriculture + Examination + Education, data=swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
View(ravenData)
mdl <- glm(ravenWinNum~ravenScore, family='binomial', data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(.95,1)
var(rpois(1000,50))
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits~date, poisson, hits)
summary(mdl)
exp(confint(mdl,'date'))
which.max(hist[,'visits'])
which.max(hits[,'visits'])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95,lambda)
mdl2 <- glm(simplystats~date, family='poisson', offest=log(visits+1), data=hits)
mdl2 <- glm(simplystats~date, family='poisson', offest=log(hits$visits+1), data=hits)
mdl2 <- glm(simplystats~date, family='poisson', offset=log(visits+1), data=hits)
qpois(.95, mdl2$fitted.values[704])
?shuttle
data(shuttle)
require(shuttle)
shuttle
?shuttle
shuttle()
shuttle
head(shuttle)
require(MASS)
data(shuttle)
head(shuttle)
mdl <- glm(use~wind, family='poisson', data=shuttle)
mdl <- glm(use~wind, family='binomial', data=shuttle)
summary(mdl)
exp(-0.03181)
mdl <- glm(use~wind+magn, family='binomial', data=shuttle)
exp(mdl$coefficients[2])
summary(mdl)
mdl$coefficients[2]
require(InsectSprays)
data(InsectSprays)
head(InsectSprays)
mdl <- glm(count~spray, familiy='poisson', data=InsectSprays)
mdl <- glm(count~spray, familiy='Poisson', data=InsectSprays)
mdl <- glm(count~spray, family = 'poisson', data=InsectSprays)
summary(mdl)
exp(mdl$coefficients[2])
?relevel
relevel(InsectSprays$spray, 'B')
mdl <- glm(count~spray, family = 'poisson', data=InsectSprays)
exp(mdl$coefficients[2])
summary(mdl)
InsectSpray$spray <- relevel(InsectSprays$spray, 'B')
InsectSprays$spray <- relevel(InsectSprays$spray, 'B')
mdl <- glm(count~spray, family = 'poisson', data=InsectSprays)
exp(mdl$coefficients[2])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- seq(0,0,length=1)
knots
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yhat <- predict(lm(y~xMat-1))
plot(x,yhat)
summary(lm(y~yhat-1))
summary(lm(y~xMat-1))
summary(lm(y~xMat))
yhat <- predict(lm(y~xMat))
plot(x,yhat)
require(mtcars)
require(datasets)
data(mtcars)
cor(mtcars)
cor(mtcars)[1,]
mdl.two <- lm(mpg~am+wt, data=mtcars)
mdl.one$coefficients
mdl.one <- lm(mpg~am, data=mtcars)
mdl.one$coefficients
mdl.two$coefficients
mdl.two <- lm(mpg~., data=mtcars)
mdl.one$coefficients
mdl.two$coefficients
data(mtcars)
cor(mtcars)[1,]
?bartlett.test
require(stats)
aggregate(mpg~am, data=mtcars, mean)
head(mtcars)
levels(mtcars$am) <- c('Automatic','Manual')
head(mtcars)
?mtcars
boxplot(mpg~am)
boxplot(mpg~am, data=mtcars)
boxplot(mpg~am, data=mtcars, xlab='Transmission', ylab='MilesPerGallon')
levels(mtcars$am) <- c('Automatic','Manual')
boxplot(mpg~am, data=mtcars, xlab='Transmission', ylab='Miles Per Gallon')
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c('Automatic','Manual')
boxplot(mpg~am, data=mtcars, xlab='Transmission', ylab='Miles Per Gallon')
aggregate(mpg~am, data=mtcars, mean)
mtcars[mtcars$am='Automatic', mpg]
mtcars[mtcars$am=='Automatic', mpg]
mtcars[mtcars$am=='Automatic', mpg]
mtcars[mtcars$am=='Automatic', mtcars$mpg]
mtcars[mtcars$am=='Automatic', ]$mpg
t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
boxplot(mpg~am, data=mtcars, xlab='Transmission', ylab='Miles Per Gallon')
cor(mtcars)[1,]
?mtcars
aggregate(mpg~am, mean, data=mtcars)
sort(cor(mtcars)[1,])
t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)#
sort(cor(mtcars)[1,])
data(cars)
sort(cor(mtcars)[1,])
data(mtcars)
sort(cor(mtcars)[1,])
sort(cor(mtcars)[,])
sort(cor(mtcars)[1:2,])
sort(cor(mtcars)[1,])
cor(mtcars)
sort(cor(mtcars)[1,])
sort(cor(mtcars)[2,])
sort(cor(mtcars)[3,])
sort(cor(mtcars)[4,])
sort(cor(mtcars)[5,])
sort(cor(mtcars)[6,])
sort(cor(mtcars)[4,])
sort(cor(mtcars)[7,])
sort(cor(mtcars)[8,])
sort(cor(mtcars)[9,])
sort(cor(mtcars)[10,])
sort(cor(mtcars)[6,])
sort(cor(mtcars)[6,])
lm(mpg~am, data=mtcars)
summary(lm(mpg~am, data=mtcars))
sort(abs(cor(mtcars))[1,7:10])
sort(abs(cor(mtcars))[10,])[5:10]
sort(abs(cor(mtcars))[10,])[5:11]
sort(abs(cor(mtcars))[1,], decreasing = FALSE)[6:11]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[6:11]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)
sort(abs(cor(mtcars))[11,], decreasing = TRUE)[1:6]
```
sort(abs(cor(mtcars))[11,], decreasing = TRUE)[1:6]
sort(abs(cor(mtcars))[11,], decreasing = TRUE)[1:6]
sort(abs(cor(mtcars))[12,], decreasing = TRUE)[1:6]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:7]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[2,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[3,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[4,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[5,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[6,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[7,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[8,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[9,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[10,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[11,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[4,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[6,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[8,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[9,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[10,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[11,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[2,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[3,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[4,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[5,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[6,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[7,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[2,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[3,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[4,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[5,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[6,], decreasing = TRUE)[1:8]
sort(abs(cor(mtcars))[7,], decreasing = TRUE)[1:8]
summary(lm(mpg~am, data=mtcars))
summary(lm(mpg~am, data=mtcars))$coefficients
summary(lm(mpg~am, data=mtcars))$R
summary(lm(mpg~am, data=mtcars))$R-squared
summary(lm(mpg~am, data=mtcars))$RS
summary(lm(mpg~am, data=mtcars))[10]
summary(lm(mpg~am, data=mtcars))[11]
summary(lm(mpg~am, data=mtcars))[12]
summary(lm(mpg~am, data=mtcars))[13]
length(summary(lm(mpg~am, data=mtcars)))
summary(lm(mpg~am, data=mtcars))[8]
summary(lm(mpg~am, data=mtcars))$r.squared
`{r}summary(lm(mpg~am, data=mtcars))$coefficients`
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:8]
summary(lm(mpg~am+wt+cyl+disp+hp+drat+vs))
summary(lm(mpg~am+wt+cyl+disp+hp+drat+vs, data=mtcars))
test <- t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
summary(lm(mpg~am, data=mtcars))[13]
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c('Automatic','Manual')
test <- t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
str(test)
test$conf.int
test$conf.int
str(test)
str(test)$p,value
str(test)$p.value
test$p.value
test$p.value*100
test$p.value
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+cyl+disp+hp+drat+vs, data=mtcars))
sort(abs(cor(mtcars))[2,], decreasing = TRUE)[1:8]
data(mtcars)
sort(abs(cor(mtcars))[2,], decreasing = TRUE)[1:8]
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+cyl+hp+drat+vs, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+cyl+hp+drat+vs, data=mtcars),lm(mpg~am+wt+cyl+disp+hp+drat+vs, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+cyl+hp+drat+vs, data=mtcars))
summary(lm(mpg~am+wt+cyl+hp+drat+vs, data=mtcars))
summary(lm(mpg~am+wt+hp, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars))
sort(abs(cor(mtcars))[1,], decreasing = TRUE)[1:8]
summary(lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars),summary(lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars)))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars),summary(lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars)))
data(mtcars)
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars),summary(lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars)))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars),lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars))
?anova
plot(lm(mpg~am, data=mtcars))
plot(lm(mpg~am+wt+hp, data=mtcars))
plot(lm(mpg~am+wt+hp+cyl+vs, data=mtcars))
plot(lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp+cyl+vs+drat, data=mtcars))
summary(lm(mpg~am+wt+hp, data=mtcars))
?mtcars
summary(lm(mpg~am+wt+hp+cyl, data=mtcars))
summary(lm(mpg~am+wt+hp, data=mtcars))
anova(lm(mpg~am, data=mtcars),lm(mpg~am+wt+hp, data=mtcars))
par(mfrow<-c(2,2))
plot(lm(mpg~am+wt+hp, data=mtcars))
plot(lm(mpg~am+wt+hp, data=mtcars), type = ALL)
par(mfrow=c(2,2)) ; plot(lm(mpg~am+wt+hp, data=mtcars), )
?mtcars
test <- t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c('Automatic','Manual')
test <- t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
str(test)
test$statistic
test$pvalue
test$p.value
test
str(test); test
test$parameter
test$conf.int
t.test(mtcars[mtcars$am=='Automatic', ]$mpg,mtcars[mtcars$am=='Manual', ]$mpg)
mean(mtcars[am=='Automatic']$mpg)
mean(mtcars[mtcars$am=='Automatic']$mpg)
mean(mtcars[mtcars$am=='Automatic',]$mpg)
pairs(mpg)
pairs(mtcars)
pairs(mtcars[,c(mtcars$mpg,mtcars$am,mtcars$wt,mtcars$hp)])
pairs(mtcars[,c('mpg','am','wt','hp')])
hist(mtcars$mpg, breaks=10, col='lightblue', xlab='',ylab='')
hist(mtcars$mpg, breaks=10, col='lightblue', xlab='',ylab='', main='Histogram mpg')
hist(mtcars$mpg, breaks=10, col='lightblue', xlab='MPG',ylab='frequency', main='Histogram mpg')
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
xfit<-seq(min(x),max(x),length=40)
xfit<-seq(min(mtcars$mpg),max(mtcars$mpg),length=40)
yfit<-dnorm(xfit,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg))
yfit <- yfit*diff(h$mids[1:2])*length(mtcars$mpg)
lines(xfit, yfit, col="blue", lwd=2)
hist(mtcars$mpg, breaks=10, col='lightblue', xlab='MPG',ylab='frequency', main='Histogram mpg')
xfit<-seq(min(mtcars$mpg),max(mtcars$mpg),length=40)
yfit<-dnorm(xfit,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg))
yfit <- yfit*diff(h$mids[1:2])*length(mtcars$mpg)
h<-hist(mtcars$mpg, breaks=10, col='lightblue', xlab='MPG',ylab='frequency', main='Histogram mpg')
xfit<-seq(min(mtcars$mpg),max(mtcars$mpg),length=40)
yfit<-dnorm(xfit,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg))
yfit <- yfit*diff(h$mids[1:2])*length(mtcars$mpg)
lines(xfit, yfit, col="blue", lwd=2)
boxplot(mpg~am, data=mtcars, xlab='Transmission', ylab='Miles Per Gallon')
par(mfrow=c(2,2)) ; plot(lm(mpg~am+wt+hp, data=mtcars), )
plot(density(mtcars$mpg), main='Density of MPG')
par(mfrow=c(2,2))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
h<-hist(mtcars$mpg, breaks=10, col='lightblue', xlab='MPG',ylab='frequency', main='Histogram mpg')
xfit<-seq(min(mtcars$mpg),max(mtcars$mpg),length=40)
yfit<-dnorm(xfit,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg))
yfit <- yfit*diff(h$mids[1:2])*length(mtcars$mpg)
lines(xfit, yfit, col="blue", lwd=2)
plot(density(mtcars$mpg), main='Density of MPG')
plot(density(mtcars$mpg), main='Density of MPG', xlab='MPG')
pairs(mtcars[,c('mpg','am','wt','hp')])
par(mfrow=c(1,2))
h<-hist(mtcars$mpg, breaks=10, col='lightblue', xlab='MPG',ylab='frequency', main='Histogram mpg')
xfit<-seq(min(mtcars$mpg),max(mtcars$mpg),length=40)
yfit<-dnorm(xfit,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg))
yfit <- yfit*diff(h$mids[1:2])*length(mtcars$mpg)
lines(xfit, yfit, col="blue", lwd=2)
plot(density(mtcars$mpg), main='Density of MPG', xlab='MPG')
plot(density(mtcars$mpg), main='Density of MPG', xlab='MPG')
plot(density(mtcars$mpg), main='Density of MPG', xlab='MPG')
plot(lm(mpg~am+wt+hp, data=mtcars), type = ALL)
?rf
ls()
dir()
cd('GitHub')
setwd('~/GitHub')
dir()
setwd('~/GitHub/pml-project')
dir()
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", method = "curl", destfile="training.csv")
training <- read.csv("training.csv")
hist(training$classe)
summary(training$classe)
str(training)
summary(training$classe)
tmp <- training
tmp <- tmp[, which(as.numeric(colSums(is.na(tmp))) > 30)]
summary(tmp)
tmp <- training
tmp <- tmp[, which(as.numeric(colSums(is.na(tmp))) > 19000)]
summary(tmp)
tmp <- training
which(as.numeric(colSums(is.na(tmp))) > 30)
training[,c(18,19)]
which(as.numeric(colSums(is.na(tmp))) > 19600)
which(as.numeric(colSums(is.na(tmp))) > 19600)
which(as.numeric(colSums(is.na(tmp))) > 19000)
which(as.numeric(colSums(is.na(tmp))) > 18000)
summary(training[,c(18)]
summary(training[,c(18)])
summary(training[,c(18)])
colSums(is.na(tmp))
which(as.numeric(colSums(is.na(tmp))) =0)
which(as.numeric(colSums(is.na(tmp))) ==0)
summary(training[,c(1)])
summary(training[,c(2)])
summary(training[,c(3)])
summary(training[,c(4)])
which(as.numeric(colSums(is.na(tmp)))==0)
tmp <- tmp[,which(as.numeric(colSums(is.na(tmp)))==0)]
summary(tmp)
summary(tmp$kurtosis_yaw_belt)
head(tmp$kurtosis_yaw_belt)
head(tmp$kurtosis_yaw_belt,100)
summary(tmp)
head(tmp$skewness_pitch_arm,100)
summary(tmp)
?which
cor(tmp)
tmp <- tmp[,which(as.numeric(colSums(tmp))>=0)]
tmp <- tmp[,which(as.numeric(colSums(is.Numeric(tmp))>=0)]
tmp <- tmp[,which(as.numeric(colSums(is.numeric(tmp))>=0)]
tmp <- tmp[,which(colSums(is.numeric(tmp))>=0)]
str(tmp)
tmp <- tmp[,which(is.numeric(tmp))]
tmp <- tmp[,which(as.numeric(colSums(is.na(tmp)))==0)]
tmp <- training
tmp <- tmp[,which(as.numeric(colSums(is.na(tmp)))==0)]
which(is.numeric(tmp))
which(class(tmp)!='Factor')
class(tmp)
class(colnames(tmp))
colnames(tmp)
str(tmp)
sapply(tmp,class)
str(sapply(tmp,class))
str(sapply(tmp,class)[1])
str(sapply(tmp,class)[,1])
str(sapply(tmp,class)[1])
str(sapply(tmp,class)[1]$chr)
str(sapply(tmp,class)[1])
sapply(tmp,class)[1]
sapply(tmp,class)[1][1]
sapply(tmp,class)[1][3]
sapply(tmp,class)[1]$1
sapply(tmp,class)[1]
sapply(tmp,class)[3]
sapply(tmp,class)
which(sapply(tmp,class)=='integer')
which(sapply(tmp,class)=='factor')
which(sapply(tmp,class)!='factor')
tmp <- tmp[,which(sapply(tmp,class)!='factor')]
summary(tmp)
tmp <- cbind(training$classe,tmp)
summary(tmp)
tmp <- cbind(training$classe,tmp[3:57])
summary(tmp)
cor(tmp)
cor(tmp[,2:56])
require(caret)
set.seed(157)
fit <- train(Classe ~ ., data=tmp, method = 'rf', prox=TRUE)
fit <- train(classe ~ ., data=tmp, method = 'rf', prox=TRUE)
summary(tmp)
fit <- train(training$classe ~ ., data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ ., data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ tmp[,c(2:10)], data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ tmp[,2:10], data=tmp, method = 'rf', prox=TRUE)
summary(tmp)
fit <- train(training$classe ~ roll_belt,pitch_belt,yaw_belt, data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ roll_belt+pitch_belt+yaw_belt, data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ roll_belt, data=tmp, method = 'rf', prox=TRUE)
fit <- train(training$classe ~ roll_belt, data=tmp, method = 'rf')
